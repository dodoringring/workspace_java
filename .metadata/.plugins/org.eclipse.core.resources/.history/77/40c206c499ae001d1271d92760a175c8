package com.mvc.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.log4j.Logger;

import com.util.MyBatisCommonFactory;

public class MemberDao {
	//log4j모듈 활용해서 로그 출력 - 날짜와 시간, 클래스명, 라인번호, 링크
	//System.out.print()대신에 사용함
	Logger log = Logger.getLogger(TestDao.class);
	//DAO클래스와 오라클 서버 사이에 MyBatis Layer에 필요한 설정 내용 담기
	//member.xml의 물리적인 위치와 오라클 서버의 정보가 담긴 MyBatisConfig.xml의 정보를
	//IO로 읽어오는 코드가 포함됨
	//마이바티스는 쿼리문을 xml문서에 따로 관리한다. -자바로 관리하는 것보다 컴파일을 하지 않아도 되고 버전 관리에도 효과적임
	MyBatisCommonFactory mcf = new MyBatisCommonFactory();

	public Map<String, Object> login(Map<String, Object> pmap) {
		Map<String, Object> map = null;
		//MyBatisConfig.xml문서를 통해 스캔한 오라클 서버 정보로 연결통로 확보
		SqlSessionFactory ssf = null;
		//위에서 SqlSessionFactory생성되면 쿼리문을 요청하는 selectOne메소드가 필요한데
		//그 메소드를 제공하는 클래스 및 commit, rollback지원
		SqlSession ss = null;
		try {
			//공통코드에서 연결통로 확보
			ssf = mcf.getSqlSessionFactory();
			//연결 통로 확보로 생성된 객체로 SqlSession 메모리에 로딩
			ss = ssf.openSession();
//			pmap = new HashMap<>();
//			pmap.put("mem_id", "lemon");
//			pmap.put("mem_pw", "1234");
			map = ss.selectOne("login", pmap);
			log.info(map);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return map;
	}
	
	public static void main(String[] args) {
		MemberDao md = new MemberDao();
		Map<String, Object> map = new HashMap<>();
		map.put("mem_id", "lemon");
		map.put("mem_pw", "12346");
		Map<String, Object> emap = md.login(map);
		System.out.println(emap);
	}
}